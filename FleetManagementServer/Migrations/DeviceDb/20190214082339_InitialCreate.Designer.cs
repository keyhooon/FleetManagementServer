// <auto-generated />
using System;
using FleetManagementServer.Areas.Device.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FleetManagementServer.Migrations.DeviceDb
{
    [DbContext(typeof(DeviceDbContext))]
    [Migration("20190214082339_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FleetManagementServer.Areas.Device.Data.AvlPacket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EventIoId");

                    b.Property<double?>("GpsAltitude");

                    b.Property<double?>("GpsAngle");

                    b.Property<double?>("GpsLatitiude");

                    b.Property<double?>("GpsLongitude");

                    b.Property<bool?>("IsValid");

                    b.Property<int>("ParameterPacketId");

                    b.Property<int?>("Satellites");

                    b.Property<DateTime?>("ServerTime");

                    b.Property<double?>("Speed");

                    b.HasKey("Id");

                    b.HasIndex("ParameterPacketId")
                        .IsUnique();

                    b.ToTable("AvlPackets");
                });

            modelBuilder.Entity("FleetManagementServer.Areas.Device.Data.Device", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("DeviceTypeId");

                    b.Property<string>("Imei");

                    b.Property<byte[]>("SecurityCode");

                    b.Property<bool>("SecurityCodeVerification");

                    b.HasKey("Id");

                    b.HasIndex("DeviceTypeId");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("FleetManagementServer.Areas.Device.Data.DeviceParameterType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("DeviceId");

                    b.Property<int?>("DeviceTypeId");

                    b.Property<int>("ParameterTypeId");

                    b.HasKey("Id");

                    b.HasIndex("DeviceTypeId");

                    b.HasIndex("ParameterTypeId");

                    b.ToTable("DeviceParameterTypes");
                });

            modelBuilder.Entity("FleetManagementServer.Areas.Device.Data.DeviceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<byte[]>("Image");

                    b.Property<string>("Model");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("DeviceType");
                });

            modelBuilder.Entity("FleetManagementServer.Areas.Device.Data.ParameterPacket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateTime");

                    b.Property<Guid>("DeviceId");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.ToTable("ParametersPackets");
                });

            modelBuilder.Entity("FleetManagementServer.Areas.Device.Data.ParameterPacketDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DeviceParameterTypeId");

                    b.Property<int>("ParameterPacketId");

                    b.Property<int?>("ParameterTypeId");

                    b.Property<int>("Value");

                    b.HasKey("Id");

                    b.HasIndex("ParameterPacketId");

                    b.HasIndex("ParameterTypeId");

                    b.ToTable("ParametersPacketDetails");
                });

            modelBuilder.Entity("FleetManagementServer.Areas.Device.Data.ParameterType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<byte[]>("Image");

                    b.Property<string>("Name");

                    b.Property<int>("Size");

                    b.HasKey("Id");

                    b.ToTable("ParameterTypes");
                });

            modelBuilder.Entity("FleetManagementServer.Areas.Device.Data.AvlPacket", b =>
                {
                    b.HasOne("FleetManagementServer.Areas.Device.Data.ParameterPacket", "ParameterPacket")
                        .WithOne("AvlPacket")
                        .HasForeignKey("FleetManagementServer.Areas.Device.Data.AvlPacket", "ParameterPacketId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FleetManagementServer.Areas.Device.Data.Device", b =>
                {
                    b.HasOne("FleetManagementServer.Areas.Device.Data.DeviceType", "DeviceType")
                        .WithMany("Devices")
                        .HasForeignKey("DeviceTypeId");
                });

            modelBuilder.Entity("FleetManagementServer.Areas.Device.Data.DeviceParameterType", b =>
                {
                    b.HasOne("FleetManagementServer.Areas.Device.Data.DeviceType", "DeviceType")
                        .WithMany("DeviceParameterTypes")
                        .HasForeignKey("DeviceTypeId");

                    b.HasOne("FleetManagementServer.Areas.Device.Data.ParameterType", "ParameterType")
                        .WithMany("DeviceParameterTypes")
                        .HasForeignKey("ParameterTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FleetManagementServer.Areas.Device.Data.ParameterPacket", b =>
                {
                    b.HasOne("FleetManagementServer.Areas.Device.Data.Device", "Device")
                        .WithMany("ParameterPackets")
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FleetManagementServer.Areas.Device.Data.ParameterPacketDetail", b =>
                {
                    b.HasOne("FleetManagementServer.Areas.Device.Data.ParameterPacket", "ParameterPacket")
                        .WithMany("ParameterPacketDetails")
                        .HasForeignKey("ParameterPacketId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FleetManagementServer.Areas.Device.Data.ParameterType", "ParameterType")
                        .WithMany("ParameterPacketDetails")
                        .HasForeignKey("ParameterTypeId");
                });
#pragma warning restore 612, 618
        }
    }
}
