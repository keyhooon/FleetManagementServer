// <auto-generated />
using System;
using FleetManagementServer.Areas.Vehicle.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;

namespace FleetManagementServer.Migrations.FleetDb
{
    [DbContext(typeof(FleetDbContext))]
    [Migration("20190210084511_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FleetManagementServer.Areas.Vehicle.Data.Device", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("Guid");

                    b.Property<byte[]>("SecurityCode");

                    b.Property<bool>("SecurityCodeVerification");

                    b.Property<int?>("VehicleDeviceDetailId");

                    b.HasKey("Id");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("FleetManagementServer.Areas.Vehicle.Data.Driver", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthDate");

                    b.Property<string>("LastName");

                    b.Property<string>("LicenseNumber");

                    b.Property<string>("Name");

                    b.Property<string>("NationalityNumber");

                    b.Property<string>("PhoneNumber");

                    b.Property<int?>("VehicleDriverId");

                    b.HasKey("Id");

                    b.ToTable("Driver");
                });

            modelBuilder.Entity("FleetManagementServer.Areas.Vehicle.Data.FleetLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.Property<int>("IdVehicle");

                    b.Property<Point>("Location");

                    b.Property<int?>("VehicleId");

                    b.HasKey("Id");

                    b.HasIndex("VehicleId");

                    b.ToTable("FleetLocations");
                });

            modelBuilder.Entity("FleetManagementServer.Areas.Vehicle.Data.FleetWay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<LineString>("Way");

                    b.HasKey("Id");

                    b.ToTable("FleetWays");
                });

            modelBuilder.Entity("FleetManagementServer.Areas.Vehicle.Data.Trip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("EndTime");

                    b.Property<int>("FleetWayId");

                    b.Property<DateTime>("StartTime");

                    b.Property<int>("VehicleId");

                    b.HasKey("Id");

                    b.HasIndex("FleetWayId");

                    b.HasIndex("VehicleId");

                    b.ToTable("Trips");
                });

            modelBuilder.Entity("FleetManagementServer.Areas.Vehicle.Data.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BodyNumber");

                    b.Property<string>("Code");

                    b.Property<byte[]>("Image");

                    b.Property<string>("MotorNumber");

                    b.Property<int?>("VehicleBrandId");

                    b.Property<int?>("VehicleTypeId");

                    b.Property<string>("VinNumber");

                    b.HasKey("Id");

                    b.HasIndex("VehicleBrandId");

                    b.HasIndex("VehicleTypeId");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("FleetManagementServer.Areas.Vehicle.Data.VehicleBrand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("Image");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("VehicleBrands");
                });

            modelBuilder.Entity("FleetManagementServer.Areas.Vehicle.Data.VehicleDevice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("VehicleId");

                    b.Property<DateTime>("date");

                    b.HasKey("Id");

                    b.HasIndex("VehicleId");

                    b.ToTable("VehicleDevices");
                });

            modelBuilder.Entity("FleetManagementServer.Areas.Vehicle.Data.VehicleDeviceDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DeviceId");

                    b.Property<DateTime>("InstallTime");

                    b.Property<int>("vehicleDeviceId");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.HasIndex("vehicleDeviceId");

                    b.ToTable("VehicleDeviceDetails");
                });

            modelBuilder.Entity("FleetManagementServer.Areas.Vehicle.Data.VehicleDriver", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AssignmentTime");

                    b.Property<int>("DriverId");

                    b.Property<int>("VehicleId");

                    b.HasKey("Id");

                    b.HasIndex("DriverId");

                    b.HasIndex("VehicleId");

                    b.ToTable("VehicleDrivers");
                });

            modelBuilder.Entity("FleetManagementServer.Areas.Vehicle.Data.VehicleType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("VehicleTypes");
                });

            modelBuilder.Entity("FleetManagementServer.Areas.Vehicle.Data.FleetLocation", b =>
                {
                    b.HasOne("FleetManagementServer.Areas.Vehicle.Data.Vehicle")
                        .WithMany("Locations")
                        .HasForeignKey("VehicleId");
                });

            modelBuilder.Entity("FleetManagementServer.Areas.Vehicle.Data.Trip", b =>
                {
                    b.HasOne("FleetManagementServer.Areas.Vehicle.Data.FleetWay", "FleetWay")
                        .WithMany("Trips")
                        .HasForeignKey("FleetWayId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FleetManagementServer.Areas.Vehicle.Data.Vehicle", "Vehicle")
                        .WithMany("Trips")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FleetManagementServer.Areas.Vehicle.Data.Vehicle", b =>
                {
                    b.HasOne("FleetManagementServer.Areas.Vehicle.Data.VehicleBrand", "Brand")
                        .WithMany("Vehicles")
                        .HasForeignKey("VehicleBrandId");

                    b.HasOne("FleetManagementServer.Areas.Vehicle.Data.VehicleType", "Type")
                        .WithMany("Vehicles")
                        .HasForeignKey("VehicleTypeId");
                });

            modelBuilder.Entity("FleetManagementServer.Areas.Vehicle.Data.VehicleDevice", b =>
                {
                    b.HasOne("FleetManagementServer.Areas.Vehicle.Data.Vehicle", "Vehicle")
                        .WithMany("Devices")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FleetManagementServer.Areas.Vehicle.Data.VehicleDeviceDetail", b =>
                {
                    b.HasOne("FleetManagementServer.Areas.Vehicle.Data.Device", "Device")
                        .WithMany("VehicleDeviceDetails")
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FleetManagementServer.Areas.Vehicle.Data.VehicleDevice")
                        .WithMany("Details")
                        .HasForeignKey("vehicleDeviceId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FleetManagementServer.Areas.Vehicle.Data.VehicleDriver", b =>
                {
                    b.HasOne("FleetManagementServer.Areas.Vehicle.Data.Driver", "Driver")
                        .WithMany("VehicleDrivers")
                        .HasForeignKey("DriverId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FleetManagementServer.Areas.Vehicle.Data.Vehicle", "Vehicle")
                        .WithMany("Drivers")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
